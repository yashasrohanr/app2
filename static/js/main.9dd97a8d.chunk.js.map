{"version":3,"sources":["MyComponents/CityComponent.js","MyComponents/WeatherComponent.js","App.js","index.js"],"names":["WeatherLogo","styled","img","ChooseCityLabel","span","CityComponent","props","updateCity","fetchWeather","src","onSubmit","className","type","id","placeholder","onChange","e","target","value","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","WeatherIcons","WeatherCondition","div","Condition","Location","WeatherInfo","WeatherInfoContainer","WeatherIcon","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","WeatherComponent","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","sys","country","Date","getHours","getMinutes","speed","Container","AppLabel","App","useState","city","updateWeather","a","preventDefault","axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dd97a8d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst WeatherLogo = styled.img`\r\n  width: 140px;\r\n  height: 160px;\r\n  margin: 30px auto;\r\n`;\r\n\r\nconst ChooseCityLabel = styled.span`\r\n  color: ;\r\n  font-family: Helvetica, sans-serif;\r\n  font-size: 19px;\r\n  font-weight: bold;\r\n\r\n  margin: 10px auto;\r\n`;\r\nconst CityComponent = (props) => {\r\n  const { updateCity, fetchWeather } = props;\r\n  return (\r\n    <>\r\n      <WeatherLogo src=\"/weather-icons/perfect-day.svg\" />\r\n      <ChooseCityLabel>\r\n        Enter the city name to find current weather\r\n      </ChooseCityLabel>\r\n      <form onSubmit={fetchWeather}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"city\"\r\n            id=\"exampleInputEmail1\"\r\n            placeholder=\"City\"\r\n            onChange={(e) => updateCity(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-warning\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CityComponent;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nexport const WeatherInfoIcons = {\r\n  sunset: \"/weather-icons/temp.svg\",\r\n  sunrise: \"/weather-icons/temp.svg\",\r\n  humidity: \"/weather-icons/humidity.svg\",\r\n  wind: \"/weather-icons/wind.svg\",\r\n  pressure: \"/weather-icons/pressure.svg\",\r\n};\r\nexport const WeatherIcons = {\r\n  \"01d\": \"/weather-icons/sunny.svg\",\r\n  \"01n\": \"/weather-icons/night.svg\",\r\n  \"02d\": \"/weather-icons/day.svg\",\r\n  \"02n\": \"/weather-icons/cloudy-night.svg\",\r\n  \"03d\": \"/weather-icons/cloudy.svg\",\r\n  \"03n\": \"/weather-icons/cloudy.svg\",\r\n  \"04d\": \"/weather-icons/perfect-day.svg\",\r\n  \"04n\": \"/weather-icons/cloudy-night.svg\",\r\n  \"09d\": \"/weather-icons/rain.svg\",\r\n  \"09n\": \"/weather-icons/rain-night.svg\",\r\n  \"10d\": \"/weather-icons/rain.svg\",\r\n  \"10n\": \"/weather-icons/rain-night.svg\",\r\n  \"11d\": \"/weather-icons/storm.svg\",\r\n  \"11n\": \"/weather-icons/storm.svg\",\r\n  \"50d\": \"/weather-icons/50d.svg\",\r\n  \"50n\": \"/weather-icons/50n.svg\",\r\n  \"13d\": \"/weather-icons/13d.svg\",\r\n  \"13n\": \"/weather-icons/13n.svg\",\r\n};\r\nconst WeatherCondition = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  margin: 30px auto;\r\n`;\r\nconst Condition = styled.span`\r\n  margin: 20px auto;\r\n  font-size: 14px;\r\n  & span {\r\n    font-size: 30px;\r\n  }\r\n`;\r\n\r\nconst WeatherLogo1 = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: 30px auto;\r\n`;\r\nconst Location = styled.span`\r\n  margin: 15px auto;\r\n  text-transform: capitalize;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n`;\r\nconst WeatherInfo = styled.span`\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  margin: 20px;\r\n  text-align: start;\r\n  width: 90%;\r\n`;\r\nconst WeatherInfoContainer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\nconst WeatherContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin: 30px auto;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst WeatherIcon = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: 5px auto;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  margin: 5px 10px;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\nconst InfoIcon = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n`;\r\nconst InfoLabel = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  margin: 15px;\r\n  & span {\r\n    font-size: 12px;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\nconst WeatherInfoComponent = (props) => {\r\n  const { name, value } = props;\r\n  return (\r\n    <InfoContainer>\r\n      <InfoIcon src={WeatherInfoIcons[name]} />\r\n      <InfoLabel>\r\n        {value}\r\n        <span>{name}</span>\r\n      </InfoLabel>\r\n    </InfoContainer>\r\n  );\r\n};\r\nconst WeatherInfoLabel = styled.span`\r\n  margin: 20px 25px 10px;\r\n  text-transform: capitalize;\r\n  text-align: start;\r\n  width: 90%;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst WeatherComponent = (props) => {\r\n  const { weather } = props;\r\n  const isDay = weather?.weather[0].icon?.includes(\"d\");\r\n  const getTime = (timeStamp) => {\r\n    return `${new Date(timeStamp * 1000).getHours()} : ${new Date(\r\n      timeStamp * 1000\r\n    ).getMinutes()}`;\r\n  };\r\n  return (\r\n    <>\r\n      <WeatherCondition>\r\n        <Condition>\r\n          <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>\r\n          {`  |  ${weather?.weather[0].description}`}\r\n        </Condition>\r\n        <WeatherIcon src={WeatherIcons[weather?.weather[0].icon]} />\r\n      </WeatherCondition>\r\n      <Location>{`${weather?.name} , ${weather?.sys?.country}`}</Location>\r\n      <WeatherInfo>Weather info</WeatherInfo>\r\n      <WeatherInfoContainer>\r\n        <WeatherInfoComponent\r\n          name={isDay ? \"sunset\" : \"sunrise\"}\r\n          value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}`}\r\n        />\r\n        <WeatherInfoComponent\r\n          name=\"humidity\"\r\n          value={weather?.main?.humidity}\r\n        ></WeatherInfoComponent>\r\n        <WeatherInfoComponent\r\n          name=\"wind\"\r\n          value={weather?.wind?.speed}\r\n        ></WeatherInfoComponent>\r\n        <WeatherInfoComponent\r\n          name=\"pressure\"\r\n          value={weather?.main?.pressure}\r\n        ></WeatherInfoComponent>\r\n      </WeatherInfoContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherComponent;\r\n","import styled from \"styled-components\";\nimport CityComponent from \"./MyComponents/CityComponent\";\nimport WeatherComponent from \"./MyComponents/WeatherComponent\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n// const API_KEY = \"fc476a6af7e2e9101b9b3d47a63f6528\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  align-items: center;\n  box-shadow: 0 3px 6px 0 #555;\n  padding: 20px 10px;\n  border-radius: 4px;\n  width: 500px;\n  background: white;\n`;\n\nconst AppLabel = styled.span`\n  color: Black;\n  font-size: 30px;\n  font-weight: bold;\n  font-family: Helvetica, sans-serif;\n`;\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fc476a6af7e2e9101b9b3d47a63f6528`\n    );\n    updateWeather(response.data);\n  };\n  return (\n    <Container>\n      <AppLabel> Weather Display </AppLabel>{\" \"}\n      {city && weather ? (\n        <WeatherComponent weather={weather} city={city} />\n      ) : (\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\n      )}{\" \"}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}